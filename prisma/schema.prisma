generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model address {
  id           Int      @id @default(autoincrement())
  country      String   @db.VarChar(255)
  state        String   @db.VarChar(255)
  city         String   @db.VarChar(255)
  neighborhood String   @db.VarChar(255)
  street       String   @db.VarChar(255)
  number       Int
  profile_id   Int
  created_at   DateTime @default(now()) @db.DateTime(0)
  updated_at   DateTime @default(now()) @db.Timestamp(0)
  profile      profile  @relation(fields: [profile_id], references: [id])

  @@index([profile_id], name: "address_fk0")
}

model card {
  id          Int      @id @default(autoincrement())
  number      String   @db.VarChar(255)
  date_expire String   @db.VarChar(100)
  dv          String   @db.VarChar(255)
  profile_id  Int
  created_at  DateTime @default(now()) @db.DateTime(0)
  updated_at  DateTime @default(now()) @db.Timestamp(0)
  profile     profile  @relation(fields: [profile_id], references: [id])

  @@index([profile_id], name: "card_fk0")
}

model page {
  id           Int       @id @default(autoincrement())
  url          String    @unique @db.VarChar(255)
  body         String?   @db.Text
  page_type_id Int
  qrcode_id    Int
  created_at   DateTime  @default(now()) @db.DateTime(0)
  updated_at   DateTime  @default(now()) @db.Timestamp(0)
  page_type    page_type @relation(fields: [page_type_id], references: [id])
  qrcode       qrcode    @relation(fields: [qrcode_id], references: [id])

  @@index([page_type_id], name: "page_fk0")
  @@index([qrcode_id], name: "page_fk1")
}

model page_type {
  id         Int      @id @default(autoincrement())
  name       String   @unique @db.VarChar(255)
  struct     String   @db.Text
  created_at DateTime @default(now()) @db.DateTime(0)
  updated_at DateTime @default(now()) @db.Timestamp(0)
  page       page[]
}

model payment {
  id           Int      @id @default(autoincrement())
  profile_id   Int
  date_payment DateTime @db.DateTime(0)
  created_at   DateTime @default(now()) @db.DateTime(0)
  updated_at   DateTime @default(now()) @db.Timestamp(0)
  profile      profile  @relation(fields: [profile_id], references: [id])

  @@index([profile_id], name: "payment_fk0")
}

model plan {
  id             Int       @id @default(autoincrement())
  value          Float     @db.Float
  print_quantity Int
  recurrence     Int
  plan_type_id   Int
  created_at     DateTime  @default(now()) @db.DateTime(0)
  updated_at     DateTime  @default(now()) @db.Timestamp(0)
  plan_type      plan_type @relation(fields: [plan_type_id], references: [id])
  profile        profile[]

  @@index([plan_type_id], name: "plan_fk0")
}

model plan_type {
  id          Int      @id @default(autoincrement())
  name        String   @unique @db.VarChar(255)
  description String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.DateTime(0)
  updated_at  DateTime @default(now()) @db.Timestamp(0)
  plan        plan[]
}

model profile {
  id             Int              @id @default(autoincrement())
  name           String           @db.VarChar(255)
  cpf            String?          @unique @db.VarChar(255)
  cnpj           String?          @unique @db.VarChar(255)
  phone          String           @db.VarChar(100)
  image          String           @db.VarChar(255)
  user_id        Int
  plan_id        Int
  created_at     DateTime         @default(now()) @db.DateTime(0)
  updated_at     DateTime         @default(now()) @db.Timestamp(0)
  plan           plan             @relation(fields: [plan_id], references: [id])
  user           user             @relation(fields: [user_id], references: [id])
  address        address[]
  card           card[]
  payment        payment[]
  profile_qrcode profile_qrcode[]

  @@index([user_id], name: "profile_fk0")
  @@index([plan_id], name: "profile_fk1")
}

model profile_qrcode {
  id              Int      @id @default(autoincrement())
  profile_id      Int
  qrcode_id       Int
  quantity_qrcode Int
  created_at      DateTime @default(now()) @db.DateTime(0)
  updated_at      DateTime @default(now()) @db.Timestamp(0)
  profile         profile  @relation(fields: [profile_id], references: [id])
  qrcode          qrcode   @relation(fields: [qrcode_id], references: [id])

  @@index([profile_id], name: "profile_qrcode_fk0")
  @@index([qrcode_id], name: "profile_qrcode_fk1")
}

model qrcode {
  id             Int              @id @default(autoincrement())
  body           String           @db.VarChar(255)
  created_at     DateTime         @default(now()) @db.DateTime(0)
  updated_at     DateTime         @default(now()) @db.Timestamp(0)
  page           page[]
  profile_qrcode profile_qrcode[]
}

model user {
  id              Int       @id @default(autoincrement())
  email           String    @unique @db.VarChar(100)
  password_digest String    @db.VarChar(255)
  status          Boolean   @default(false)
  created_at      DateTime  @default(now()) @db.DateTime(0)
  updated_at      DateTime  @default(now()) @db.Timestamp(0)
  profile         profile[]
}
